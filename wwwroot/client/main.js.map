{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAOO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAiB;QAEL,uDAAS;QAAA,4DAAK;QAClB,0EAA6B;QACjC,4DAAM;QACN,yEAAmB;QACf,kEAAa;QACjB,4DAAM;;QALE,0DAAS;QAAT,0EAAS;;;;;;;;;;;;;;;;;;;;;;;ACDqC;AACF;AAET;AACE;AACe;AACV;;AAiB/C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAHX;QACP,0DAAK;KACR,YANM;YACL,oEAAa;YACb,kEAAgB;SACnB;mIAMU,SAAS,mBAblB,wDAAY;QACZ,wEAAe;QACf,+DAAQ,aAGN,oEAAa;QACb,kEAAgB;;;;;;;;;;;;;;;;;;ACde;;;AAI9B,MAAM,KAAK;IAEd,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAI7B,aAAQ,GAAc,EAAS,CAAC;IAFvC,CAAC;IAID,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,eAAe,CAAC;aACpC,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO;QACX,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;0DAdQ,KAAK;sGAAL,KAAK,WAAL,KAAK;;;;;;;;;;;;;;;;;;;ACCX,MAAM,QAAQ;IACjB,YAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAE/B,CAAC;;gEAHQ,QAAQ;sGAAR,QAAQ;QCRrB,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,gEAAM;;;;;;;;;;;;;;;;;;;;;;;IEAF,yEAAuD;IAE/C,oEAAyF;IACzF,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,qEAAI;IACI,uDAAqC;;IAAA,4DAAK;IAC9C,qEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAEnC,6EAA+C;IAAA,+DAAG;IAAA,4DAAS;;;IARtD,0DAA4B;IAA5B,qKAA4B;IAAiC,uFAAoB;IAClF,0DAA+B;IAA/B,yGAA+B;IAE3B,0DAAqC;IAArC,mKAAqC;IACrC,0DAAsB;IAAtB,6FAAsB;IACtB,0DAAoB;IAApB,2FAAoB;IACpB,0DAAsB;IAAtB,oFAAsB;;ADD3B,MAAM,eAAe;IAEhC,YAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAC/B,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;aACpB,SAAS,CAAC,GAAG,EAAE;YACZ,eAAe;QACnB,CAAC,CAAC,CAAC,CAAC,6BAA6B;IACzC,CAAC;;8EATgB,eAAe;6GAAf,eAAe;QCRpC,yEAAiB;QACb,6GAYM;QACV,4DAAM;;QAbiB,0DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;;;ACDxC,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/store.service.ts","./src/app/views/cartView.component.ts","./src/app/views/cartView.component.html","./src/app/views/productListView.component.ts","./src/app/views/productListView.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3>{{title}}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\nimport { CartView } from './views/cartView.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListView,\r\n    CartView\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule\r\n  ],\r\n    providers: [\r\n        Store\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"../shared/Product\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public products: Product[] = [] as any;\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<[]>(\"/api/products\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n}","<h3>Cart</h3>\r\n<hr />","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productListView.component.html\",\r\n    styleUrls: [\"productListView.component.css\"]\r\n})\r\nexport default class ProductListView implements OnInit {\r\n\r\n    constructor(public store: Store) {\r\n    }\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(() => {\r\n                // do something\r\n            }); // <- kicks off the operation\r\n    }\r\n}","<div class=\"row\">\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid product-image\" alt=\"{{ p.artist }}\" />\r\n            <h5>{{ p.category }} - {{ p.size }}</h5>\r\n            <ul>\r\n                <li>Price: {{ p.price | currency:\"EUR\" }}</li>\r\n                <li>Artist: {{ p.artist }}</li>\r\n                <li>Title: {{ p.title }}</li>\r\n                <li>{{ p.artDescription }}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}